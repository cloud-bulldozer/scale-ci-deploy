---
#
# Adjusts the scale of a RHCOS cluster by spreading worker count across each machineset
#

- name: Adjust the scale of a RHCOS cluster
  hosts: orchestration
  gather_facts: false
  remote_user: "{{orchestration_user}}"
  vars_files:
    - vars/scale.yml
  tasks:
    - name: Get cluster name
      shell: |
        {%raw%}oc get machineset -n openshift-machine-api -o=go-template='{{(index (index .items 0).metadata.labels {%endraw%} "{{rhcos_metadata_label_prefix}}/cluster-api-cluster" {%raw%})}}'{%endraw%}
      register: rhcos_cluster_name

    - name: Get worker machineset names
      shell: |
        oc get machineset -n openshift-machine-api | egrep "\-worker\-|\-w\-" | awk '{print $1}'
      register: rhcos_worker_machinesets

    - name: Set machineset replica count for single availablity zone
      shell: |
        oc patch machineset {{item.ms}} --type=merge -n openshift-machine-api -p '{"spec": {"replicas": {{item.count|int}} }}'
      with_items:
        - ms: "{{rhcos_worker_machinesets.stdout_lines[0]}}"
          count: "{{rhcos_worker_count}}"
      when: rhcos_worker_machinesets.stdout_lines|length == 1

    - name: Evenly split machineset replica count for two availablity zones
      shell: |
        oc patch machineset {{item.ms}} --type=merge -n openshift-machine-api -p '{"spec": {"replicas": {{item.count|int}} }}'
      with_items:
        - ms: "{{rhcos_worker_machinesets.stdout_lines[0]}}"
          count: "{{(rhcos_worker_count|int / 2) | round(0, 'ceil')}}"
        - ms: "{{rhcos_worker_machinesets.stdout_lines[1]}}"
          count: "{{(rhcos_worker_count|int / 2) | round(0, 'floor')}}"
      when: rhcos_worker_machinesets.stdout_lines|length == 2

    - name: Evenly split machineset replica count for three availablity zones
      shell: |
        oc patch machineset {{item.ms}} --type=merge -n openshift-machine-api -p '{"spec": {"replicas": {{item.count|int}} }}'
      with_items:
        - ms: "{{rhcos_worker_machinesets.stdout_lines[0]}}"
          count: "{{(rhcos_worker_count|int / 3) | round(0, 'ceil')}}"
        - ms: "{{rhcos_worker_machinesets.stdout_lines[1]}}"
          count: "{{((rhcos_worker_count|int / 3) - 0.5) | round(0, 'ceil')}}"
        - ms: "{{rhcos_worker_machinesets.stdout_lines[2]}}"
          count: "{{(rhcos_worker_count|int / 3) | round(0, 'floor')}}"
      when: rhcos_worker_machinesets.stdout_lines|length == 3

    - name: Evenly split machineset replica count for four availablity zones
      shell: |
        oc patch machineset {{item.ms}} --type=merge -n openshift-machine-api -p '{"spec": {"replicas": {{item.count|int}} }}'
      with_items:
        - ms: "{{rhcos_worker_machinesets.stdout_lines[0]}}"
          count: "{{(rhcos_worker_count|int / 4) | round(0, 'ceil')}}"
        - ms: "{{rhcos_worker_machinesets.stdout_lines[1]}}"
          count: "{{((rhcos_worker_count|int / 4) - 0.25) | round(0, 'ceil')}}"
        - ms: "{{rhcos_worker_machinesets.stdout_lines[2]}}"
          count: "{{((rhcos_worker_count|int / 4) - 0.5) | round(0, 'ceil')}}"
        - ms: "{{rhcos_worker_machinesets.stdout_lines[3]}}"
          count: "{{(rhcos_worker_count|int / 4) | round(0, 'floor')}}"
      when: rhcos_worker_machinesets.stdout_lines|length == 4

    - name: Poll node count to see if scaling finished
      shell: oc get nodes -l node-role.kubernetes.io/worker= --no-headers | grep " Ready" -c
      register: scaled_worker_node_count
      until: scaled_worker_node_count.stdout|int == rhcos_worker_count|int
      delay: 1
      retries: "{{poll_attempts|int}}"

    - name: Add additional label to worker nodes to provide ability to isolate workloads on workers
      shell: |
        oc label nodes --overwrite -l 'node-role.kubernetes.io/worker=' computenode=true
