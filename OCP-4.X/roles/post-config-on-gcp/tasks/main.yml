---
#
# Post-Config for OCP on GCP
#
# Performs:
# * Opens firewall rules for workload/worker nodes for ssh (as well as for debugging workload pod ssh)
# * Opens firewall rules for Network Tests P2P HostNetwork Tests
#   Ports 2022 (tcp), 20000-20109 (tcp, udp), 32768-60999 (tcp, udp)
#

- name: Get cluster name
  shell: |
    {%raw%}oc get machineset -n openshift-machine-api -o=go-template='{{(index (index .items 0).metadata.labels {%endraw%} "{{machineset_metadata_label_prefix}}/cluster-api-cluster" {%raw%})}}'{%endraw%}
  register: rhcos_cluster_name

- block:
    - name: Get public ip of the workload node
      shell: |
        oc get nodes -o wide | grep workload | awk '{print $7}'
      register: workload_public_ip

   - name: Add workload node to group
     add_host:
       name: "{{ workload_public_ip.stdout }}"
       groups: workload
  when: openshift_toggle_workload_node|bool

- name: Get network name
  shell: |
     gcloud compute networks list | grep {{ rhcos_cluster_name.stdout }} | awk '{print $1}' 
  register: gcp_network

- name: Create firewall rule for ICMP
  shell: |
    gcloud compute firewall-rules create scale-ci-icmp-{{ rhcos_cluster_name.stdout }} --network {{ gcp_network.stdout }} --priority 101 --description "scale-ci allow icmp" --allow icmp

- name: Create firewall rule for ssh (22)
  shell: |
    gcloud compute firewall-rules create scale-ci-ssh-{{ rhcos_cluster_name.stdout }} --network {{ gcp_network.stdout }} --direction INGRESS --priority 102 --description "scale-ci allow ssh" --allow tcp:22

- name: Create firewall rule for pbench-agent ssh (2022)
  shell: |
    gcloud compute firewall-rules create scale-ci-pbench-{{ rhcos_cluster_name.stdout }} --network {{ gcp_network.stdout }} --direction INGRESS --priority 103 --description "scale-ci allow pbench-agents" --allow tcp:2022

- name: Create firewall rule for tcp,udp network tests (20000-20109)
  shell: |
    gcloud compute firewall-rules create scale-ci-net-{{ rhcos_cluster_name.stdout }} --network {{ gcp_network.stdout }} --direction INGRESS --priority 104 --description "scale-ci allow tcp,udp network tests" --rules tcp,udp:20000-20109 --action allow

# Typically `net.ipv4.ip_local_port_range` is set to `32768 60999` in which uperf will pick a few random ports to send flags over.
# Currently there is no method outside of sysctls to control those ports
# See pbench issue #1238 - https://github.com/distributed-system-analysis/pbench/issues/1238

- name: Create firewall rule for tcp,udp hostnetwork tests (32768-60999)
  shell: |
    gcloud compute firewall-rules create scale-ci-hostnet-{{ rhcos_cluster_name.stdout }} --network {{ gcp_network.stdout }}  --priority 105 --description "scale-ci allow tcp,udp hostnetwork tests" --rules tcp,udp:32768-60999 --action allow

- name: Get the kubeconfig off of the orchestration host
  fetch:
    src: "{{ansible_user_dir}}/scale-ci-deploy/scale-ci-gcp/auth/kubeconfig"
    dest: "{{playbook_dir}}/kubeconfig"
    flat: true
  when:
    - kubeconfig_auth_dir_path == ""

