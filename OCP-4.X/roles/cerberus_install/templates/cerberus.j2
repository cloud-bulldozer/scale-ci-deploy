cerberus:
    distribution: {{ distribution }}                                # Distribution can be kubernetes or openshift
    kubeconfig_path: {{ kubeconfig_path }}                          # Path to kubeconfig
    port: {{ port }}                                                # http server port where cerberus status is published
    watch_nodes: {{ watch_nodes }}                                  # Set to True for the cerberus to monitor the cluster nodes
    watch_cluster_operators: {{ watch_cluster_operators }}          # Set to True for cerberus to monitor cluster operators
    watch_url_routes: {{ watch_url_routes }}                        # Route url's you want to monitor, this is a double array with the url and optional authorization parameter
    watch_namespaces: {{ watch_namespaces }}                        # List of namespaces to be monitored
    cerberus_publish_status: {{ cerberus_publish_status }}          # When enabled, cerberus starts a light weight http server and publishes the status
    inspect_components: {{ inspect_components }}                    # Enable it only when OpenShift client is supported to run. When enabled, cerberus collects logs, events and metrics of failed components
    prometheus_url: {{ prometheus_url }}                            # The prometheus url/route is automatically obtained in case of OpenShift, please set it when the distribution is Kubernetes.
    prometheus_bearer_token: {{ prometheus_bearer_token }}          # The bearer token is automatically obtained in case of OpenShift, please set it when the distribution is Kubernetes. This is needed to authenticate with prometheus.
    slack_integration: {{ slack_integration }}                      # When enabled, cerberus reports the failed iterations in the slack channel
                                                                    # When slack_integration is enabled, a watcher can be assigned for each day. The watcher of the day is tagged while reporting failures in the slack channel. Values are slack member ID's.
    cop_slack_ID: {{ cop_slack_ID }}                                # (NOTE: Defining the watcher id's is optional and when the watcher slack id's are not defined, the slack_team_alias tag is used if it is set else no tag is used while reporting failures in the slack channel.)
    slack_team_alias: {{ slack_team_alias }}                        # The slack team alias to be tagged while reporting failures in the slack channel when no watcher is assigned

tunings:
    iterations: {{ iterations }}                                    # Iterations to loop before stopping the watch, it will be replaced with infinity when the daemon mode is enabled
    sleep_time: {{ sleep_time }}                                    # Sleep duration between each iteration
    kube_api_request_chunk_size: {{ kube_api_request_chunk_size }}  # Large requests will be broken into the specified chunk size to reduce the load on API server and improve responsiveness.
    daemon_mode: {{ daemon_mode }}                                  # Iterations are set to infinity which means that the cerberus will monitor the resources forever
    cores_usage_percentage: {{ cores_usage_percentage }}            # Set the fraction of cores to be used for multiprocessing

database:
    database_path: {{ database_path }}                              # Path where cerberus database needs to be stored
    reuse_database: {{ reuse_database }}                            # When enabled, the database is reused to store the failures
